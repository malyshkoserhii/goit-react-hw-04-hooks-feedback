{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/NotificationMessage/NotificationMessage.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/NotificationMessage/NotificationMessage.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","sectionTitle","FeedbackOptions","options","onLeaveFeedback","wrapper","map","el","idx","feedbackBtn","onClick","protoTypes","PropTypes","arrayOf","string","func","isRequired","NotificationMessage","message","notification","Statistics","good","neutral","bad","total","positivePercentage","feedback","App","useState","setGood","setNeutral","setBad","button","Object","keys","option","state","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,+B,mBCA7BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,gBCApED,EAAOC,QAAU,CAAC,QAAU,iCAAiC,YAAc,uC,iBCA3ED,EAAOC,QAAU,CAAC,aAAe,4C,uICclBC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAEC,QAAtB,UACGJ,GAAS,oBAAIE,UAAWC,IAAEE,aAAjB,SAAgCL,IACzCC,M,gCCHCK,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKN,UAAWC,IAAEM,QAAlB,SACGF,EAAQG,KAAI,SAACC,EAAIC,GAAL,OACX,8BACE,wBAAQV,UAAWC,IAAEU,YAAaC,QAAS,kBAAMN,EAAgBG,IAAjE,SACGA,KAFKC,SAUlBN,EAAgBS,WAAa,CAC3BR,QAASS,IAAUC,QAAQD,IAAUE,QACrCV,gBAAiBQ,IAAUG,KAAKC,YAGnBd,Q,gBCXAe,EARa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAC1B,mBAAGpB,UAAWC,IAAEoB,aAAhB,SAA+BD,K,gBCmBlBE,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,oBAAG3B,UAAWC,IAAE2B,SAAhB,mBAAiCL,KACjC,oBAAGvB,UAAWC,IAAE2B,SAAhB,sBAAoCJ,KACpC,oBAAGxB,UAAWC,IAAE2B,SAAhB,kBAAgCH,KAChC,oBAAGzB,UAAWC,IAAE2B,SAAhB,oBAAkCF,KAClC,oBAAG1B,UAAWC,IAAE2B,SAAhB,gCAA8CD,EAA9C,WCgDSE,MApDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNP,EADM,KACAQ,EADA,OAEiBD,mBAAS,GAF1B,mBAENN,EAFM,KAEGQ,EAFH,OAGSF,mBAAS,GAHlB,mBAGNL,EAHM,KAGDQ,EAHC,KAIPP,EAAQH,EAAOC,EAAUC,EACzBS,EAAS,CAAEX,OAAMC,UAASC,OAoBhC,OACE,qCACE,wBACA,cAAC,EAAD,CAAS3B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,QAAS8B,OAAOC,KAAKF,GACrB5B,gBAxBwB,SAAA+B,IAClB,CACVd,KAAMQ,EACNP,QAASQ,EACTP,IAAKQ,IAGHI,IAAQ,SAAAC,GAAK,OAAIA,EAAQ,UAqB3B,cAAC,EAAD,CAASxC,MAAM,aAAf,SACa,IAAV4B,EACC,cAAC,EAAD,CAAqBN,QAAQ,sBAE7B,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBA3B8B,SAAAD,GACtC,OAAIH,GAAQC,GAAWC,EAAM,EACpBc,KAAKC,MAAc,IAAPjB,EAAcG,GAG5B,EAsBqBe,CAAgCf,WC7ChEgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a5ffce3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Statistics_feedback__1188I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__CWV2v\",\"sectionTitle\":\"Section_sectionTitle__1Qdcw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__1LgGj\",\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__2DtSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"NotificationMessage_notification__1SAWe\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={s.section}>\r\n    {title && <h2 className={s.sectionTitle}>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      {options.map((el, idx) => (\r\n        <div key={idx}>\r\n          <button className={s.feedbackBtn} onClick={() => onLeaveFeedback(el)}>\r\n            {el}\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.protoTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './NotificationMessage.module.css';\r\n\r\nconst NotificationMessage = ({ message }) => (\r\n  <p className={s.notification}>{message}</p>\r\n);\r\n\r\nNotificationMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default NotificationMessage;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p className={s.feedback}>good: {good}</p>\r\n      <p className={s.feedback}>neutral: {neutral}</p>\r\n      <p className={s.feedback}>bad: {bad}</p>\r\n      <p className={s.feedback}>total: {total}</p>\r\n      <p className={s.feedback}>positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport NotificationMessage from './components/NotificationMessage';\nimport Statistics from './components/Statistics';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const total = good + neutral + bad;\n  const button = { good, neutral, bad };\n\n  const handleIncrementFeedback = option => {\n    const obj = {\n      good: setGood,\n      neutral: setNeutral,\n      bad: setBad,\n    };\n\n    obj[option](state => state + 1);\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    if (good || neutral || bad > 0) {\n      return Math.round((good * 100) / total);\n    }\n\n    return 0;\n  };\n\n  return (\n    <>\n      <div></div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(button)}\n          onLeaveFeedback={handleIncrementFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {total === 0 ? (\n          <NotificationMessage message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage(total)}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}